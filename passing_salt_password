There are many instances where a program, or script, asks for a password or is part of a configuration file on your linux machine. It is not a good idea to be putting clear text passwords directly in script files. Instead, you can create a one-way salt generated from your password, and use that to place in your script or configuration file.

To Generate a salt for a password, you can simply use following command in many linux distros:

user@hostname~$echo "thepassword" | openssl enc -aes-256-cbc -md sha512 -a -pbkdf2 -iter 100000 -salt -pass pass:"a_salt_password" > .secret.txt

In this command, we echo'ed "thepassword" and piped it to ssl command to generate a salt password. The "a_salt_password" is the password to generate the salt. Finally, it is piped to a file called .secret.txt. The output of the command should look something like this, and stored inside the file: 

U2FsdGVkX19wYkfuT4OlZIDHnEU1J7yu1Ex8OeYFxcU=

This is the salted-version of our password.

Now that this salt is generated, we can utilize this salt inside our configuration file or script to pass the variables in. 

Something like this, in a bash script, will reference the password for our uses and stored as a variable:

PASS=$(cat .secret.txt | openssl enc -aes-256-cbc -md sha512 -a -d -pbkdf2 -iter 100000 -salt -pass pass:'a_salt_password')

With this variable PASS, you can reference it wherever you like in your script.

One thing to note, is that if someone has direct access to all these files, the password could still be decrypted. Set the appropriate file permissions for the script and .secret.txt file.
